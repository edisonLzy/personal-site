sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `user_account` VARCHAR(255) NOT NULL, `user_tele` VARCHAR(255) NOT NULL, `user_password` VARCHAR(255) NOT NULL, `user_avator` VARCHAR(255) NOT NULL, `user_name` VARCHAR(255) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Users`;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Users' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_account` `user_account` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_tele` `user_tele` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_password` `user_password` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_avator` `user_avator` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_name` `user_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SHOW INDEX FROM `Users`

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tags` (`id` INTEGER NOT NULL auto_increment , `tag_name` VARCHAR(255) NOT NULL, `tag_pic` VARCHAR(256) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Tags`;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Tags' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_name` `tag_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_pic` `tag_pic` VARCHAR(256) NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SHOW INDEX FROM `Tags`

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles` (`id` INTEGER NOT NULL auto_increment , `article_title` VARCHAR(255) NOT NULL, `article_type` VARCHAR(255) NOT NULL, `article_html` TEXT NOT NULL, `article_md` TEXT NOT NULL, `article_views` VARCHAR(255) NOT NULL DEFAULT '0', `article_likes` VARCHAR(255) NOT NULL DEFAULT '0', `article_desc` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles`;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_title` `article_title` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_type` `article_type` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_html` `article_html` TEXT NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_md` `article_md` TEXT NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_views` `article_views` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_likes` `article_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_desc` `article_desc` TEXT NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Articles' AND constraint_name = 'articles_ibfk_1' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Articles`
      DROP FOREIGN KEY `articles_ibfk_1`;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Articles` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles`

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Comments` (`id` INTEGER NOT NULL auto_increment , `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0', `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User', `comment_content` VARCHAR(256) NOT NULL, `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, `article_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Comments`;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Comments' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_likes` `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_content` `comment_content` VARCHAR(256) NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_parent_id` `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_171' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_171`;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_172' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_172`;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_name` `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User';

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SHOW INDEX FROM `Comments`

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles_Tags_mapping` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `ArticleId` INTEGER , `TagId` INTEGER , PRIMARY KEY (`ArticleId`, `TagId`), FOREIGN KEY (`ArticleId`) REFERENCES `Articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`TagId`) REFERENCES `Tags` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles_Tags_mapping`;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles_Tags_mapping' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:00:56] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles_Tags_mapping`

sql [2020-08-19 17:01:00] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:01:00] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 17:01:00] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:01:00] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 17:01:01] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 17:01:01] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 17:01:06] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:01:06] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:02:56] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:02:56] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 17:02:56] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:02:56] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 17:02:56] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 17:02:56] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 17:03:01] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 17:03:01] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:03:01] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 17:03:01] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 17:03:16] [DEBUG]: Executing (default): INSERT INTO `Comments` (`id`,`comment_likes`,`comment_name`,`comment_content`,`comment_parent_id`,`createdAt`,`updatedAt`,`article_id`) VALUES (DEFAULT,?,?,?,?,?,?,?);

sql [2020-08-19 17:03:16] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 17:03:16] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 17:03:22] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 17:03:22] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:03:23] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 17:03:23] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:03:23] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 17:03:23] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:10:21] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 17:10:21] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:10:28] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 17:10:28] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:20:45] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:20:45] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 17:20:46] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:20:46] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 17:20:46] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 17:20:46] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 17:20:47] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 17:20:47] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:20:47] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 17:20:47] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 17:21:03] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 17:21:03] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:21:03] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 17:21:03] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 17:21:05] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 17:21:05] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:21:16] [DEBUG]: Executing (default): INSERT INTO `Comments` (`id`,`comment_likes`,`comment_name`,`comment_content`,`comment_parent_id`,`createdAt`,`updatedAt`,`article_id`) VALUES (DEFAULT,?,?,?,?,?,?,?);

sql [2020-08-19 17:21:16] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 17:21:16] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 17:21:51] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:21:51] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 17:21:52] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:21:52] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 17:21:52] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 17:21:52] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 17:21:54] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 17:21:54] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:21:54] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 17:21:54] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 17:21:56] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 17:21:56] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:22:01] [DEBUG]: Executing (default): INSERT INTO `Comments` (`id`,`comment_likes`,`comment_name`,`comment_content`,`comment_parent_id`,`createdAt`,`updatedAt`,`article_id`) VALUES (DEFAULT,?,?,?,?,?,?,?);

sql [2020-08-19 17:22:01] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 17:22:01] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 17:28:39] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:28:39] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 17:28:39] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:28:39] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 17:28:39] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 17:28:39] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 17:28:41] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 17:28:41] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:28:41] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 17:28:41] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 17:28:43] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 17:28:43] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:28:50] [DEBUG]: Executing (default): INSERT INTO `Comments` (`id`,`comment_likes`,`comment_name`,`comment_content`,`comment_parent_id`,`createdAt`,`updatedAt`,`article_id`) VALUES (DEFAULT,?,?,?,?,?,?,?);

sql [2020-08-19 17:28:50] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 17:28:50] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 17:28:54] [DEBUG]: Executing (default): INSERT INTO `Comments` (`id`,`comment_likes`,`comment_name`,`comment_content`,`comment_parent_id`,`createdAt`,`updatedAt`,`article_id`) VALUES (DEFAULT,?,?,?,?,?,?,?);

sql [2020-08-19 17:28:54] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 17:28:54] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 17:29:27] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 17:29:27] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:29:29] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 17:29:29] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:29:34] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:29:34] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 17:29:34] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:29:34] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 17:29:34] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 17:29:34] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 17:29:38] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:29:38] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:29:54] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:29:54] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:32:31] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:32:31] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:32:34] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 17:32:34] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:32:34] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 17:32:34] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 17:32:52] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:32:52] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 17:32:52] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:32:52] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 17:32:52] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 17:32:52] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 17:32:54] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 17:32:54] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:32:54] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 17:32:54] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 17:32:59] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:32:59] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 17:32:59] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:32:59] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 17:32:59] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 17:32:59] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 17:33:13] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:33:13] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:35:15] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = 'javascript' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:35:15] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = 'javascript' OR `Article`.`article_title` LIKE '%%')) LIMIT 0, 6;

sql [2020-08-19 17:36:16] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `user_account` VARCHAR(255) NOT NULL, `user_tele` VARCHAR(255) NOT NULL, `user_password` VARCHAR(255) NOT NULL, `user_avator` VARCHAR(255) NOT NULL, `user_name` VARCHAR(255) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:36:16] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Users`;

sql [2020-08-19 17:36:16] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Users' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:36:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_account` `user_account` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:36:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_tele` `user_tele` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:36:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_password` `user_password` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:36:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_avator` `user_avator` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:36:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_name` `user_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:36:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): SHOW INDEX FROM `Users`

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tags` (`id` INTEGER NOT NULL auto_increment , `tag_name` VARCHAR(255) NOT NULL, `tag_pic` VARCHAR(256) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Tags`;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Tags' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_name` `tag_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_pic` `tag_pic` VARCHAR(256) NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): SHOW INDEX FROM `Tags`

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles` (`id` INTEGER NOT NULL auto_increment , `article_title` VARCHAR(255) NOT NULL, `article_type` VARCHAR(255) NOT NULL, `article_html` TEXT NOT NULL, `article_md` TEXT NOT NULL, `article_views` VARCHAR(255) NOT NULL DEFAULT '0', `article_likes` VARCHAR(255) NOT NULL DEFAULT '0', `article_desc` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles`;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_title` `article_title` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_type` `article_type` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_html` `article_html` TEXT NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_md` `article_md` TEXT NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_views` `article_views` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_likes` `article_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_desc` `article_desc` TEXT NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Articles' AND constraint_name = 'articles_ibfk_1' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Articles`
      DROP FOREIGN KEY `articles_ibfk_1`;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Articles` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles`

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Comments` (`id` INTEGER NOT NULL auto_increment , `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0', `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User', `comment_content` VARCHAR(256) NOT NULL, `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, `article_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Comments`;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Comments' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_likes` `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_content` `comment_content` VARCHAR(256) NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_parent_id` `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_173' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_173`;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_174' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_174`;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_name` `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User';

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): SHOW INDEX FROM `Comments`

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles_Tags_mapping` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `ArticleId` INTEGER , `TagId` INTEGER , PRIMARY KEY (`ArticleId`, `TagId`), FOREIGN KEY (`ArticleId`) REFERENCES `Articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`TagId`) REFERENCES `Tags` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles_Tags_mapping`;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles_Tags_mapping' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:36:17] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles_Tags_mapping`

sql [2020-08-19 17:36:19] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:36:19] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = '' OR `Article`.`article_title` LIKE '%%')) ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:36:36] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = 'javascript' OR `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:36:36] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = 'javascript' OR `Article`.`article_title` LIKE '%%')) LIMIT 0, 6;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `user_account` VARCHAR(255) NOT NULL, `user_tele` VARCHAR(255) NOT NULL, `user_password` VARCHAR(255) NOT NULL, `user_avator` VARCHAR(255) NOT NULL, `user_name` VARCHAR(255) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Users`;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Users' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_account` `user_account` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_tele` `user_tele` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_password` `user_password` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_avator` `user_avator` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_name` `user_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SHOW INDEX FROM `Users`

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tags` (`id` INTEGER NOT NULL auto_increment , `tag_name` VARCHAR(255) NOT NULL, `tag_pic` VARCHAR(256) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Tags`;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Tags' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_name` `tag_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_pic` `tag_pic` VARCHAR(256) NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SHOW INDEX FROM `Tags`

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles` (`id` INTEGER NOT NULL auto_increment , `article_title` VARCHAR(255) NOT NULL, `article_type` VARCHAR(255) NOT NULL, `article_html` TEXT NOT NULL, `article_md` TEXT NOT NULL, `article_views` VARCHAR(255) NOT NULL DEFAULT '0', `article_likes` VARCHAR(255) NOT NULL DEFAULT '0', `article_desc` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles`;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_title` `article_title` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_type` `article_type` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_html` `article_html` TEXT NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_md` `article_md` TEXT NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_views` `article_views` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_likes` `article_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_desc` `article_desc` TEXT NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Articles' AND constraint_name = 'articles_ibfk_1' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Articles`
      DROP FOREIGN KEY `articles_ibfk_1`;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Articles` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles`

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Comments` (`id` INTEGER NOT NULL auto_increment , `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0', `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User', `comment_content` VARCHAR(256) NOT NULL, `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, `article_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Comments`;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Comments' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_likes` `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_content` `comment_content` VARCHAR(256) NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_parent_id` `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_175' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_175`;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_176' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_176`;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_name` `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User';

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SHOW INDEX FROM `Comments`

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles_Tags_mapping` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `ArticleId` INTEGER , `TagId` INTEGER , PRIMARY KEY (`ArticleId`, `TagId`), FOREIGN KEY (`ArticleId`) REFERENCES `Articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`TagId`) REFERENCES `Tags` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles_Tags_mapping`;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles_Tags_mapping' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:37:27] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles_Tags_mapping`

sql [2020-08-19 17:37:29] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = 'javascript' AND `Article`.`article_title` LIKE '%%'));

sql [2020-08-19 17:37:29] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND (`Article`.`article_type` = 'javascript' AND `Article`.`article_title` LIKE '%%')) LIMIT 0, 6;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `user_account` VARCHAR(255) NOT NULL, `user_tele` VARCHAR(255) NOT NULL, `user_password` VARCHAR(255) NOT NULL, `user_avator` VARCHAR(255) NOT NULL, `user_name` VARCHAR(255) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Users`;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Users' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_account` `user_account` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_tele` `user_tele` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_password` `user_password` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_avator` `user_avator` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_name` `user_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): SHOW INDEX FROM `Users`

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tags` (`id` INTEGER NOT NULL auto_increment , `tag_name` VARCHAR(255) NOT NULL, `tag_pic` VARCHAR(256) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Tags`;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Tags' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_name` `tag_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_pic` `tag_pic` VARCHAR(256) NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): SHOW INDEX FROM `Tags`

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles` (`id` INTEGER NOT NULL auto_increment , `article_title` VARCHAR(255) NOT NULL, `article_type` VARCHAR(255) NOT NULL, `article_html` TEXT NOT NULL, `article_md` TEXT NOT NULL, `article_views` VARCHAR(255) NOT NULL DEFAULT '0', `article_likes` VARCHAR(255) NOT NULL DEFAULT '0', `article_desc` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles`;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_title` `article_title` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_type` `article_type` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_html` `article_html` TEXT NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_md` `article_md` TEXT NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_views` `article_views` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_likes` `article_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_desc` `article_desc` TEXT NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Articles' AND constraint_name = 'articles_ibfk_1' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Articles`
      DROP FOREIGN KEY `articles_ibfk_1`;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles`

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Comments` (`id` INTEGER NOT NULL auto_increment , `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0', `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User', `comment_content` VARCHAR(256) NOT NULL, `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, `article_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Comments`;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Comments' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_likes` `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_content` `comment_content` VARCHAR(256) NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_parent_id` `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:39:16] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:39:17] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_177' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:39:17] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_177`;

sql [2020-08-19 17:39:17] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:39:17] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_178' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:39:17] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_178`;

sql [2020-08-19 17:39:17] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:39:17] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_name` `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User';

sql [2020-08-19 17:39:17] [DEBUG]: Executing (default): SHOW INDEX FROM `Comments`

sql [2020-08-19 17:39:17] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles_Tags_mapping` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `ArticleId` INTEGER , `TagId` INTEGER , PRIMARY KEY (`ArticleId`, `TagId`), FOREIGN KEY (`ArticleId`) REFERENCES `Articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`TagId`) REFERENCES `Tags` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:39:17] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles_Tags_mapping`;

sql [2020-08-19 17:39:17] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles_Tags_mapping' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:39:17] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:39:17] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:39:17] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles_Tags_mapping`

sql [2020-08-19 17:39:55] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript');

sql [2020-08-19 17:39:55] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript') LIMIT 0, 6;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `user_account` VARCHAR(255) NOT NULL, `user_tele` VARCHAR(255) NOT NULL, `user_password` VARCHAR(255) NOT NULL, `user_avator` VARCHAR(255) NOT NULL, `user_name` VARCHAR(255) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Users`;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Users' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_account` `user_account` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_tele` `user_tele` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_password` `user_password` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_avator` `user_avator` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_name` `user_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): SHOW INDEX FROM `Users`

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tags` (`id` INTEGER NOT NULL auto_increment , `tag_name` VARCHAR(255) NOT NULL, `tag_pic` VARCHAR(256) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Tags`;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Tags' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_name` `tag_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_pic` `tag_pic` VARCHAR(256) NOT NULL;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:40:47] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): SHOW INDEX FROM `Tags`

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles` (`id` INTEGER NOT NULL auto_increment , `article_title` VARCHAR(255) NOT NULL, `article_type` VARCHAR(255) NOT NULL, `article_html` TEXT NOT NULL, `article_md` TEXT NOT NULL, `article_views` VARCHAR(255) NOT NULL DEFAULT '0', `article_likes` VARCHAR(255) NOT NULL DEFAULT '0', `article_desc` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles`;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_title` `article_title` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_type` `article_type` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_html` `article_html` TEXT NOT NULL;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_md` `article_md` TEXT NOT NULL;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_views` `article_views` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_likes` `article_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_desc` `article_desc` TEXT NOT NULL;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Articles' AND constraint_name = 'articles_ibfk_1' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Articles`
      DROP FOREIGN KEY `articles_ibfk_1`;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Articles` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles`

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Comments` (`id` INTEGER NOT NULL auto_increment , `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0', `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User', `comment_content` VARCHAR(256) NOT NULL, `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, `article_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Comments`;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Comments' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_likes` `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_content` `comment_content` VARCHAR(256) NOT NULL;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_parent_id` `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_179' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_179`;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_180' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_180`;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_name` `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User';

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): SHOW INDEX FROM `Comments`

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles_Tags_mapping` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `ArticleId` INTEGER , `TagId` INTEGER , PRIMARY KEY (`ArticleId`, `TagId`), FOREIGN KEY (`ArticleId`) REFERENCES `Articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`TagId`) REFERENCES `Tags` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles_Tags_mapping`;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles_Tags_mapping' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:40:48] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles_Tags_mapping`

sql [2020-08-19 17:40:49] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'vue');

sql [2020-08-19 17:40:49] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'vue') LIMIT 0, 6;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `user_account` VARCHAR(255) NOT NULL, `user_tele` VARCHAR(255) NOT NULL, `user_password` VARCHAR(255) NOT NULL, `user_avator` VARCHAR(255) NOT NULL, `user_name` VARCHAR(255) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Users`;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Users' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_account` `user_account` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_tele` `user_tele` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_password` `user_password` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_avator` `user_avator` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_name` `user_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SHOW INDEX FROM `Users`

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tags` (`id` INTEGER NOT NULL auto_increment , `tag_name` VARCHAR(255) NOT NULL, `tag_pic` VARCHAR(256) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Tags`;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Tags' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_name` `tag_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_pic` `tag_pic` VARCHAR(256) NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SHOW INDEX FROM `Tags`

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles` (`id` INTEGER NOT NULL auto_increment , `article_title` VARCHAR(255) NOT NULL, `article_type` VARCHAR(255) NOT NULL, `article_html` TEXT NOT NULL, `article_md` TEXT NOT NULL, `article_views` VARCHAR(255) NOT NULL DEFAULT '0', `article_likes` VARCHAR(255) NOT NULL DEFAULT '0', `article_desc` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles`;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_title` `article_title` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_type` `article_type` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_html` `article_html` TEXT NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_md` `article_md` TEXT NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_views` `article_views` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_likes` `article_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_desc` `article_desc` TEXT NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Articles' AND constraint_name = 'articles_ibfk_1' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Articles`
      DROP FOREIGN KEY `articles_ibfk_1`;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Articles` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles`

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Comments` (`id` INTEGER NOT NULL auto_increment , `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0', `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User', `comment_content` VARCHAR(256) NOT NULL, `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, `article_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Comments`;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Comments' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_likes` `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_content` `comment_content` VARCHAR(256) NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_parent_id` `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_181' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_181`;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_182' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_182`;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_name` `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User';

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SHOW INDEX FROM `Comments`

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles_Tags_mapping` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `ArticleId` INTEGER , `TagId` INTEGER , PRIMARY KEY (`ArticleId`, `TagId`), FOREIGN KEY (`ArticleId`) REFERENCES `Articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`TagId`) REFERENCES `Tags` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles_Tags_mapping`;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles_Tags_mapping' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:41:47] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles_Tags_mapping`

sql [2020-08-19 17:49:18] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `user_account` VARCHAR(255) NOT NULL, `user_tele` VARCHAR(255) NOT NULL, `user_password` VARCHAR(255) NOT NULL, `user_avator` VARCHAR(255) NOT NULL, `user_name` VARCHAR(255) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:49:18] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Users`;

sql [2020-08-19 17:49:18] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Users' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:49:18] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_account` `user_account` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:49:18] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_tele` `user_tele` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:49:18] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_password` `user_password` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:49:18] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_avator` `user_avator` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:49:18] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_name` `user_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:49:18] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:49:18] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): SHOW INDEX FROM `Users`

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tags` (`id` INTEGER NOT NULL auto_increment , `tag_name` VARCHAR(255) NOT NULL, `tag_pic` VARCHAR(256) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Tags`;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Tags' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_name` `tag_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_pic` `tag_pic` VARCHAR(256) NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): SHOW INDEX FROM `Tags`

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles` (`id` INTEGER NOT NULL auto_increment , `article_title` VARCHAR(255) NOT NULL, `article_type` VARCHAR(255) NOT NULL, `article_html` TEXT NOT NULL, `article_md` TEXT NOT NULL, `article_views` VARCHAR(255) NOT NULL DEFAULT '0', `article_likes` VARCHAR(255) NOT NULL DEFAULT '0', `article_desc` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles`;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_title` `article_title` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_type` `article_type` VARCHAR(255) NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_html` `article_html` TEXT NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_md` `article_md` TEXT NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_views` `article_views` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_likes` `article_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_desc` `article_desc` TEXT NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Articles' AND constraint_name = 'articles_ibfk_1' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Articles`
      DROP FOREIGN KEY `articles_ibfk_1`;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Articles` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles`

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Comments` (`id` INTEGER NOT NULL auto_increment , `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0', `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User', `comment_content` VARCHAR(256) NOT NULL, `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, `article_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Comments`;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Comments' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_likes` `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_content` `comment_content` VARCHAR(256) NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_parent_id` `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_183' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_183`;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_184' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_184`;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_name` `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User';

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): SHOW INDEX FROM `Comments`

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles_Tags_mapping` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `ArticleId` INTEGER , `TagId` INTEGER , PRIMARY KEY (`ArticleId`, `TagId`), FOREIGN KEY (`ArticleId`) REFERENCES `Articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`TagId`) REFERENCES `Tags` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles_Tags_mapping`;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles_Tags_mapping' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 17:49:19] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles_Tags_mapping`

sql [2020-08-19 17:49:23] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:49:23] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:49:24] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript');

sql [2020-08-19 17:49:24] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:49:27] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'html5');

sql [2020-08-19 17:49:27] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'html5') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:50:06] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:50:06] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:50:07] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript');

sql [2020-08-19 17:50:07] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:50:10] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'html5');

sql [2020-08-19 17:50:10] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'html5') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:50:10] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'css3');

sql [2020-08-19 17:50:10] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'css3') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:50:11] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'vue');

sql [2020-08-19 17:50:11] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'vue') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:50:12] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'react');

sql [2020-08-19 17:50:12] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'react') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:50:13] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'wechat');

sql [2020-08-19 17:50:13] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'wechat') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:50:14] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'react');

sql [2020-08-19 17:50:14] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'react') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:50:15] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'webgl');

sql [2020-08-19 17:50:15] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'webgl') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:50:15] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'html5');

sql [2020-08-19 17:50:15] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'html5') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:50:16] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'css3');

sql [2020-08-19 17:50:16] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'css3') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:50:16] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'html5');

sql [2020-08-19 17:50:16] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'html5') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:50:17] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript');

sql [2020-08-19 17:50:17] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:50:17] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'vue');

sql [2020-08-19 17:50:17] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'vue') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:50:19] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'vue');

sql [2020-08-19 17:50:19] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'vue') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:50:20] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'vue');

sql [2020-08-19 17:50:20] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'vue') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:50:21] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'vue');

sql [2020-08-19 17:50:21] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'vue') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:51:05] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:51:05] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:51:07] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript');

sql [2020-08-19 17:51:07] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:51:08] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'html5');

sql [2020-08-19 17:51:08] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'html5') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:51:09] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'vue');

sql [2020-08-19 17:51:09] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'vue') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:51:10] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript');

sql [2020-08-19 17:51:10] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:51:11] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'react');

sql [2020-08-19 17:51:11] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'react') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:51:11] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'webgl');

sql [2020-08-19 17:51:11] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'webgl') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:51:13] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'html5');

sql [2020-08-19 17:51:13] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'html5') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:51:13] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'css3');

sql [2020-08-19 17:51:13] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'css3') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:51:14] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'vue');

sql [2020-08-19 17:51:14] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'vue') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:51:24] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript');

sql [2020-08-19 17:51:24] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:51:26] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript');

sql [2020-08-19 17:51:26] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:51:27] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript');

sql [2020-08-19 17:51:27] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:51:37] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:51:37] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:51:48] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:51:48] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 17:51:48] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:51:48] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 17:51:48] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 17:51:48] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 17:52:24] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:52:24] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 17:52:24] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:52:24] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 17:52:24] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 17:52:24] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 17:54:03] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:54:03] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 17:54:03] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:54:03] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 17:54:03] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 17:54:03] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 17:54:08] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:54:08] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:54:09] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript');

sql [2020-08-19 17:54:09] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:54:11] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript');

sql [2020-08-19 17:54:11] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'javascript') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:54:38] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:54:38] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:55:00] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 17:55:00] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 17:55:00] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 17:55:00] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 17:55:10] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:55:10] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 17:55:10] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:55:10] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 17:55:10] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 17:55:10] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 17:55:51] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:55:51] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 17:55:58] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:55:58] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 17:55:58] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:55:58] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 17:55:58] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 17:55:58] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 17:56:20] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 17:56:20] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 18:03:35] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 18:03:35] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 18:04:33] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'asdasdasdasd');

sql [2020-08-19 18:04:33] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = 'asdasdasdasd') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 18:05:22] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = '123123123');

sql [2020-08-19 18:05:22] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = '123123123') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 18:05:26] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = '1231231231312312313');

sql [2020-08-19 18:05:26] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = '1231231231312312313') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 18:06:10] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = '[object object]');

sql [2020-08-19 18:06:10] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = '[object object]') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 18:06:28] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = '[object object]');

sql [2020-08-19 18:06:28] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = '[object object]') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:22:50] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:22:50] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:23:25] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:23:25] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:23:36] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:23:36] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:24:22] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = '[object object]');

sql [2020-08-19 21:24:22] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_type` = '[object object]') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:24:46] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%asd%');

sql [2020-08-19 21:24:46] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%asd%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:25:07] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:25:07] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:25:23] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%散散心%');

sql [2020-08-19 21:25:23] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%散散心%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:30:38] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:30:38] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:30:54] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 21:30:54] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:31:53] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:31:53] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:31:57] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 21:31:57] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:32:09] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:32:09] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:33:13] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:33:13] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 21:33:13] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:33:13] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 21:33:13] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 21:33:13] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 21:33:58] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 21:33:58] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:34:03] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%');

sql [2020-08-19 21:34:03] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:34:37] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:34:37] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 21:34:37] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:34:37] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 21:34:37] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 21:34:37] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 21:35:12] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 21:35:12] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:37:57] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:37:57] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 21:37:57] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:37:57] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 21:37:57] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 21:37:57] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 21:39:35] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:39:35] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 21:39:35] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:39:35] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 21:39:35] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 21:39:35] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 21:39:43] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 21:39:43] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:40:51] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 21:40:51] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:40:56] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:40:56] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 21:40:56] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:40:56] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 21:40:57] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 21:40:57] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 21:41:40] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:41:40] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:41:41] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:41:41] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 21:41:41] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:41:41] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 21:41:41] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 21:41:41] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 21:42:18] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:42:18] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 21:42:18] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:42:18] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 21:42:18] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 21:42:18] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 21:42:38] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%');

sql [2020-08-19 21:42:38] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:45:02] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:45:02] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 21:45:02] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:45:02] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 21:45:02] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 21:45:02] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 21:45:13] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%');

sql [2020-08-19 21:45:13] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:45:43] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:45:43] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 21:45:43] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:45:43] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 21:45:43] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 21:45:43] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 21:45:47] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:45:47] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 21:45:47] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:45:47] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 21:45:47] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 21:45:47] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 21:45:57] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 21:45:57] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:46:49] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:46:49] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 21:46:49] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:46:49] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 21:46:49] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 21:46:49] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 21:46:58] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 21:46:58] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:50:00] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:50:00] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 21:50:00] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:50:00] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 21:50:00] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 21:50:00] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 21:50:55] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:50:55] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 21:50:55] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:50:55] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 21:50:55] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 21:50:55] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 21:51:01] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 21:51:01] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:51:13] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vu%');

sql [2020-08-19 21:51:13] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vu%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:51:20] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vueeeee%');

sql [2020-08-19 21:51:20] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vueeeee%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:52:20] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:52:20] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 21:52:20] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:52:20] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 21:52:20] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 21:52:20] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 21:53:07] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:53:07] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 21:53:07] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:53:07] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 21:53:07] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 21:53:07] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 21:54:21] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:54:21] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:55:52] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 21:55:52] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:57:29] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 21:57:29] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:57:32] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vu%');

sql [2020-08-19 21:57:32] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vu%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:57:34] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:57:34] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:57:38] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%js%');

sql [2020-08-19 21:57:38] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%js%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:57:40] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:57:40] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:58:03] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 21:58:03] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:58:06] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%js%');

sql [2020-08-19 21:58:06] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%js%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:58:07] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%j%');

sql [2020-08-19 21:58:07] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%j%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:58:09] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:58:09] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:58:26] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%100%');

sql [2020-08-19 21:58:26] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%100%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:58:30] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 21:58:30] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:58:34] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%react%');

sql [2020-08-19 21:58:34] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%react%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 21:58:36] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 21:58:36] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:02:09] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:02:09] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:03:58] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:03:58] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:04:39] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:04:39] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:04:52] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 22:04:52] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:04:54] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:04:54] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:04:54] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 22:04:54] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 22:05:03] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:05:03] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:05:16] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:05:16] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 22:05:16] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:05:16] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 22:05:16] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 22:05:16] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 22:05:20] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:05:20] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:06:03] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 22:06:03] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:06:05] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%');

sql [2020-08-19 22:06:05] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:06:08] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 22:06:08] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:06:11] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 22:06:11] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:06:13] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%');

sql [2020-08-19 22:06:13] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:06:22] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 22:06:22] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:06:24] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%');

sql [2020-08-19 22:06:24] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:06:37] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 22:06:37] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:06:42] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%');

sql [2020-08-19 22:06:42] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:06:45] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 22:06:45] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:06:48] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%');

sql [2020-08-19 22:06:48] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:07:01] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 22:07:01] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:07:06] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%');

sql [2020-08-19 22:07:06] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:07:27] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 22:07:27] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:07:33] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:07:33] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:07:33] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 22:07:33] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 22:10:31] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:10:31] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:10:31] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:10:31] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:10:32] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:10:32] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:10:32] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 22:10:32] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 22:10:34] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:10:34] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:10:34] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:10:34] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:10:35] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:10:35] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:10:35] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 22:10:35] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 22:10:36] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:10:36] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:10:36] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:10:36] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:10:45] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:10:45] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 22:10:45] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:10:45] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 22:10:45] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 22:10:45] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 22:10:51] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vu%');

sql [2020-08-19 22:10:51] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vu%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:10:54] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%react%');

sql [2020-08-19 22:10:54] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%react%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:12:19] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 22:12:19] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:12:20] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:12:20] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:12:20] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 22:12:20] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 22:12:26] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:12:26] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:12:26] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:12:26] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:12:46] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:12:46] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:12:46] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:12:46] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:12:53] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 22:12:53] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:13:08] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:13:08] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:13:08] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:13:08] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:14:24] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:14:24] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:14:24] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:14:24] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:14:28] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:14:28] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:14:28] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 22:14:28] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 22:14:29] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:14:29] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:14:29] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:14:29] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:14:30] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:14:30] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:14:30] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 22:14:30] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 22:14:44] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:14:44] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:14:44] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 22:14:44] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 22:15:38] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:15:38] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:15:38] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:15:38] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:15:47] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:15:47] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:15:47] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:15:47] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:15:53] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 22:15:53] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:32:21] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:32:21] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:32:21] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:32:21] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:32:50] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:32:50] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:32:50] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:32:50] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:32:54] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:32:54] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:32:54] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:32:54] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:32:55] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:32:55] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:32:55] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 22:32:55] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 22:32:56] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:32:56] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:32:56] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:32:56] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:32:57] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:32:57] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:32:57] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 22:32:57] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 22:32:58] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:32:58] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:32:58] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:32:58] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:32:59] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:32:59] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:32:59] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 22:32:59] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 22:32:59] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:32:59] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:32:59] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:32:59] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:33:00] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:33:00] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:33:00] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 22:33:00] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 22:33:01] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:33:01] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:33:01] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:33:01] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:33:02] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:33:02] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:33:02] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 22:33:02] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 22:33:30] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 22:33:30] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:33:34] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 22:33:34] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:33:34] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 22:33:34] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 22:33:38] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:33:38] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:33:38] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 22:33:38] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 22:33:53] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:33:53] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:33:54] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:33:54] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:33:55] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:33:55] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:34:07] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:34:07] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:34:09] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:34:09] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:34:09] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 22:34:09] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 22:34:14] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 22:34:14] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 22:34:14] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 22:34:14] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 22:34:17] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:34:17] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 22:34:17] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:34:17] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 22:34:17] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 22:34:17] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 22:34:23] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:34:23] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:34:35] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:34:35] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 22:35:02] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:35:02] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 22:35:02] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:35:02] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 22:35:02] [DEBUG]: Executing (default): SELECT count(*) AS `count` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 22:35:02] [DEBUG]: Executing (default): SELECT `id`, `comment_likes`, `comment_name`, `comment_content`, `comment_parent_id`, `createdAt`, `user_id`, `article_id` FROM `Comments` AS `Comment` WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `user_account` VARCHAR(255) NOT NULL, `user_tele` VARCHAR(255) NOT NULL, `user_password` VARCHAR(255) NOT NULL, `user_avator` VARCHAR(255) NOT NULL, `user_name` VARCHAR(255) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Users`;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Users' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_account` `user_account` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_tele` `user_tele` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_password` `user_password` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_avator` `user_avator` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_name` `user_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SHOW INDEX FROM `Users`

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tags` (`id` INTEGER NOT NULL auto_increment , `tag_name` VARCHAR(255) NOT NULL, `tag_pic` VARCHAR(256) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Tags`;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Tags' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_name` `tag_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_pic` `tag_pic` VARCHAR(256) NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SHOW INDEX FROM `Tags`

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles` (`id` INTEGER NOT NULL auto_increment , `article_title` VARCHAR(255) NOT NULL, `article_type` VARCHAR(255) NOT NULL, `article_html` TEXT NOT NULL, `article_md` TEXT NOT NULL, `article_views` VARCHAR(255) NOT NULL DEFAULT '0', `article_likes` VARCHAR(255) NOT NULL DEFAULT '0', `article_desc` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles`;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_title` `article_title` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_type` `article_type` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_html` `article_html` TEXT NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_md` `article_md` TEXT NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_views` `article_views` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_likes` `article_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_desc` `article_desc` TEXT NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Articles' AND constraint_name = 'articles_ibfk_1' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Articles`
      DROP FOREIGN KEY `articles_ibfk_1`;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Articles` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles`

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Comments` (`id` INTEGER NOT NULL auto_increment , `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0', `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User', `comment_content` VARCHAR(256) NOT NULL, `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, `article_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Comments`;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Comments' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_likes` `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_content` `comment_content` VARCHAR(256) NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_parent_id` `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_185' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_185`;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_186' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_186`;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_name` `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User';

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SHOW INDEX FROM `Comments`

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles_Tags_mapping` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `ArticleId` INTEGER , `TagId` INTEGER , PRIMARY KEY (`ArticleId`, `TagId`), FOREIGN KEY (`ArticleId`) REFERENCES `Articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`TagId`) REFERENCES `Tags` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles_Tags_mapping`;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles_Tags_mapping' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:43:32] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles_Tags_mapping`

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `user_account` VARCHAR(255) NOT NULL, `user_tele` VARCHAR(255) NOT NULL, `user_password` VARCHAR(255) NOT NULL, `user_avator` VARCHAR(255) NOT NULL, `user_name` VARCHAR(255) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Users`;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Users' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_account` `user_account` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_tele` `user_tele` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_password` `user_password` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_avator` `user_avator` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_name` `user_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): SHOW INDEX FROM `Users`

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tags` (`id` INTEGER NOT NULL auto_increment , `tag_name` VARCHAR(255) NOT NULL, `tag_pic` VARCHAR(256) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Tags`;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Tags' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_name` `tag_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_pic` `tag_pic` VARCHAR(256) NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): SHOW INDEX FROM `Tags`

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles` (`id` INTEGER NOT NULL auto_increment , `article_title` VARCHAR(255) NOT NULL, `article_type` VARCHAR(255) NOT NULL, `article_html` TEXT NOT NULL, `article_md` TEXT NOT NULL, `article_views` VARCHAR(255) NOT NULL DEFAULT '0', `article_likes` VARCHAR(255) NOT NULL DEFAULT '0', `article_desc` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles`;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_title` `article_title` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_type` `article_type` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_html` `article_html` TEXT NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_md` `article_md` TEXT NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_views` `article_views` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_likes` `article_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_desc` `article_desc` TEXT NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Articles' AND constraint_name = 'articles_ibfk_1' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Articles`
      DROP FOREIGN KEY `articles_ibfk_1`;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Articles` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles`

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Comments` (`id` INTEGER NOT NULL auto_increment , `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0', `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User', `comment_content` VARCHAR(256) NOT NULL, `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, `article_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Comments`;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Comments' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_likes` `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_content` `comment_content` VARCHAR(256) NOT NULL;

sql [2020-08-19 22:44:40] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_parent_id` `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1;

sql [2020-08-19 22:44:41] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:41] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:41] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:44:41] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_187' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:44:41] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_187`;

sql [2020-08-19 22:44:41] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:44:41] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_188' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:44:41] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_188`;

sql [2020-08-19 22:44:41] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:44:41] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_name` `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User';

sql [2020-08-19 22:44:41] [DEBUG]: Executing (default): SHOW INDEX FROM `Comments`

sql [2020-08-19 22:44:41] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles_Tags_mapping` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `ArticleId` INTEGER , `TagId` INTEGER , PRIMARY KEY (`ArticleId`, `TagId`), FOREIGN KEY (`ArticleId`) REFERENCES `Articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`TagId`) REFERENCES `Tags` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:44:41] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles_Tags_mapping`;

sql [2020-08-19 22:44:41] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles_Tags_mapping' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:44:41] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:41] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:41] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles_Tags_mapping`

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `user_account` VARCHAR(255) NOT NULL, `user_tele` VARCHAR(255) NOT NULL, `user_password` VARCHAR(255) NOT NULL, `user_avator` VARCHAR(255) NOT NULL, `user_name` VARCHAR(255) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Users`;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Users' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_account` `user_account` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_tele` `user_tele` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_password` `user_password` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_avator` `user_avator` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_name` `user_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SHOW INDEX FROM `Users`

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tags` (`id` INTEGER NOT NULL auto_increment , `tag_name` VARCHAR(255) NOT NULL, `tag_pic` VARCHAR(256) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Tags`;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Tags' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_name` `tag_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_pic` `tag_pic` VARCHAR(256) NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SHOW INDEX FROM `Tags`

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles` (`id` INTEGER NOT NULL auto_increment , `article_title` VARCHAR(255) NOT NULL, `article_type` VARCHAR(255) NOT NULL, `article_html` TEXT NOT NULL, `article_md` TEXT NOT NULL, `article_views` VARCHAR(255) NOT NULL DEFAULT '0', `article_likes` VARCHAR(255) NOT NULL DEFAULT '0', `article_desc` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles`;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_title` `article_title` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_type` `article_type` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_html` `article_html` TEXT NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_md` `article_md` TEXT NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_views` `article_views` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_likes` `article_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_desc` `article_desc` TEXT NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Articles' AND constraint_name = 'articles_ibfk_1' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Articles`
      DROP FOREIGN KEY `articles_ibfk_1`;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Articles` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles`

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Comments` (`id` INTEGER NOT NULL auto_increment , `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0', `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User', `comment_content` VARCHAR(256) NOT NULL, `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, `article_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Comments`;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Comments' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_likes` `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_content` `comment_content` VARCHAR(256) NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_parent_id` `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_189' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_189`;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_190' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_190`;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_name` `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User';

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SHOW INDEX FROM `Comments`

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles_Tags_mapping` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `ArticleId` INTEGER , `TagId` INTEGER , PRIMARY KEY (`ArticleId`, `TagId`), FOREIGN KEY (`ArticleId`) REFERENCES `Articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`TagId`) REFERENCES `Tags` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles_Tags_mapping`;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles_Tags_mapping' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:44:42] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles_Tags_mapping`

sql [2020-08-19 22:44:45] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 22:44:45] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 10;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `user_account` VARCHAR(255) NOT NULL, `user_tele` VARCHAR(255) NOT NULL, `user_password` VARCHAR(255) NOT NULL, `user_avator` VARCHAR(255) NOT NULL, `user_name` VARCHAR(255) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Users`;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Users' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_account` `user_account` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_tele` `user_tele` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_password` `user_password` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_avator` `user_avator` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_name` `user_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SHOW INDEX FROM `Users`

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tags` (`id` INTEGER NOT NULL auto_increment , `tag_name` VARCHAR(255) NOT NULL, `tag_pic` VARCHAR(256) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Tags`;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Tags' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_name` `tag_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_pic` `tag_pic` VARCHAR(256) NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SHOW INDEX FROM `Tags`

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles` (`id` INTEGER NOT NULL auto_increment , `article_title` VARCHAR(255) NOT NULL, `article_type` VARCHAR(255) NOT NULL, `article_html` TEXT NOT NULL, `article_md` TEXT NOT NULL, `article_views` VARCHAR(255) NOT NULL DEFAULT '0', `article_likes` VARCHAR(255) NOT NULL DEFAULT '0', `article_desc` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles`;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_title` `article_title` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_type` `article_type` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_html` `article_html` TEXT NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_md` `article_md` TEXT NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_views` `article_views` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_likes` `article_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_desc` `article_desc` TEXT NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Articles' AND constraint_name = 'articles_ibfk_1' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Articles`
      DROP FOREIGN KEY `articles_ibfk_1`;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Articles` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles`

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Comments` (`id` INTEGER NOT NULL auto_increment , `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0', `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User', `comment_content` VARCHAR(256) NOT NULL, `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, `article_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Comments`;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Comments' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_likes` `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_content` `comment_content` VARCHAR(256) NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_parent_id` `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_191' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_191`;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_192' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_192`;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_name` `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User';

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SHOW INDEX FROM `Comments`

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles_Tags_mapping` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `ArticleId` INTEGER , `TagId` INTEGER , PRIMARY KEY (`ArticleId`, `TagId`), FOREIGN KEY (`ArticleId`) REFERENCES `Articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`TagId`) REFERENCES `Tags` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles_Tags_mapping`;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles_Tags_mapping' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:00] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles_Tags_mapping`

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `user_account` VARCHAR(255) NOT NULL, `user_tele` VARCHAR(255) NOT NULL, `user_password` VARCHAR(255) NOT NULL, `user_avator` VARCHAR(255) NOT NULL, `user_name` VARCHAR(255) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Users`;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Users' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_account` `user_account` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_tele` `user_tele` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_password` `user_password` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_avator` `user_avator` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_name` `user_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): SHOW INDEX FROM `Users`

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tags` (`id` INTEGER NOT NULL auto_increment , `tag_name` VARCHAR(255) NOT NULL, `tag_pic` VARCHAR(256) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Tags`;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Tags' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_name` `tag_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_pic` `tag_pic` VARCHAR(256) NOT NULL;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): SHOW INDEX FROM `Tags`

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles` (`id` INTEGER NOT NULL auto_increment , `article_title` VARCHAR(255) NOT NULL, `article_type` VARCHAR(255) NOT NULL, `article_html` TEXT NOT NULL, `article_md` TEXT NOT NULL, `article_views` VARCHAR(255) NOT NULL DEFAULT '0', `article_likes` VARCHAR(255) NOT NULL DEFAULT '0', `article_desc` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles`;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:05] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_title` `article_title` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_type` `article_type` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_html` `article_html` TEXT NOT NULL;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_md` `article_md` TEXT NOT NULL;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_views` `article_views` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_likes` `article_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_desc` `article_desc` TEXT NOT NULL;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Articles' AND constraint_name = 'articles_ibfk_1' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Articles`
      DROP FOREIGN KEY `articles_ibfk_1`;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Articles` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles`

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Comments` (`id` INTEGER NOT NULL auto_increment , `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0', `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User', `comment_content` VARCHAR(256) NOT NULL, `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, `article_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Comments`;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Comments' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_likes` `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_content` `comment_content` VARCHAR(256) NOT NULL;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_parent_id` `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_193' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_193`;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_194' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_194`;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_name` `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User';

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): SHOW INDEX FROM `Comments`

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles_Tags_mapping` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `ArticleId` INTEGER , `TagId` INTEGER , PRIMARY KEY (`ArticleId`, `TagId`), FOREIGN KEY (`ArticleId`) REFERENCES `Articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`TagId`) REFERENCES `Tags` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles_Tags_mapping`;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles_Tags_mapping' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:06] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles_Tags_mapping`

sql [2020-08-19 22:45:07] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `Article` ON `Comment`.`article_id` = `Article`.`id` AND (`Article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 22:45:07] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `Article`.`id` AS `Article.id`, `Article`.`article_title` AS `Article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `Article` ON `Comment`.`article_id` = `Article`.`id` AND (`Article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 10;

sql [2020-08-19 22:45:15] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `user_account` VARCHAR(255) NOT NULL, `user_tele` VARCHAR(255) NOT NULL, `user_password` VARCHAR(255) NOT NULL, `user_avator` VARCHAR(255) NOT NULL, `user_name` VARCHAR(255) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:15] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Users`;

sql [2020-08-19 22:45:15] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Users' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:15] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_account` `user_account` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:15] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_tele` `user_tele` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:15] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_password` `user_password` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_avator` `user_avator` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_name` `user_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): SHOW INDEX FROM `Users`

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tags` (`id` INTEGER NOT NULL auto_increment , `tag_name` VARCHAR(255) NOT NULL, `tag_pic` VARCHAR(256) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Tags`;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Tags' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_name` `tag_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_pic` `tag_pic` VARCHAR(256) NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): SHOW INDEX FROM `Tags`

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles` (`id` INTEGER NOT NULL auto_increment , `article_title` VARCHAR(255) NOT NULL, `article_type` VARCHAR(255) NOT NULL, `article_html` TEXT NOT NULL, `article_md` TEXT NOT NULL, `article_views` VARCHAR(255) NOT NULL DEFAULT '0', `article_likes` VARCHAR(255) NOT NULL DEFAULT '0', `article_desc` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles`;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_title` `article_title` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_type` `article_type` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_html` `article_html` TEXT NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_md` `article_md` TEXT NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_views` `article_views` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_likes` `article_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_desc` `article_desc` TEXT NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Articles' AND constraint_name = 'articles_ibfk_1' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Articles`
      DROP FOREIGN KEY `articles_ibfk_1`;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Articles` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles`

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Comments` (`id` INTEGER NOT NULL auto_increment , `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0', `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User', `comment_content` VARCHAR(256) NOT NULL, `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, `article_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Comments`;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Comments' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_likes` `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_content` `comment_content` VARCHAR(256) NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_parent_id` `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_195' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_195`;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_196' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_196`;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_name` `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User';

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): SHOW INDEX FROM `Comments`

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles_Tags_mapping` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `ArticleId` INTEGER , `TagId` INTEGER , PRIMARY KEY (`ArticleId`, `TagId`), FOREIGN KEY (`ArticleId`) REFERENCES `Articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`TagId`) REFERENCES `Tags` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles_Tags_mapping`;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles_Tags_mapping' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:16] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles_Tags_mapping`

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `user_account` VARCHAR(255) NOT NULL, `user_tele` VARCHAR(255) NOT NULL, `user_password` VARCHAR(255) NOT NULL, `user_avator` VARCHAR(255) NOT NULL, `user_name` VARCHAR(255) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Users`;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Users' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_account` `user_account` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_tele` `user_tele` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_password` `user_password` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_avator` `user_avator` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `user_name` `user_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Users` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SHOW INDEX FROM `Users`

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Tags` (`id` INTEGER NOT NULL auto_increment , `tag_name` VARCHAR(255) NOT NULL, `tag_pic` VARCHAR(256) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Tags`;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Tags' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_name` `tag_name` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `tag_pic` `tag_pic` VARCHAR(256) NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Tags` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SHOW INDEX FROM `Tags`

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles` (`id` INTEGER NOT NULL auto_increment , `article_title` VARCHAR(255) NOT NULL, `article_type` VARCHAR(255) NOT NULL, `article_html` TEXT NOT NULL, `article_md` TEXT NOT NULL, `article_views` VARCHAR(255) NOT NULL DEFAULT '0', `article_likes` VARCHAR(255) NOT NULL DEFAULT '0', `article_desc` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles`;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_title` `article_title` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_type` `article_type` VARCHAR(255) NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_html` `article_html` TEXT NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_md` `article_md` TEXT NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_views` `article_views` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_likes` `article_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `article_desc` `article_desc` TEXT NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Articles` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Articles' AND constraint_name = 'articles_ibfk_1' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Articles`
      DROP FOREIGN KEY `articles_ibfk_1`;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Articles` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles`

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Comments` (`id` INTEGER NOT NULL auto_increment , `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0', `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User', `comment_content` VARCHAR(256) NOT NULL, `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `deletedAt` DATETIME, `user_id` INTEGER, `article_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Comments`;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Comments' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_likes` `comment_likes` VARCHAR(255) NOT NULL DEFAULT '0';

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_content` `comment_content` VARCHAR(256) NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_parent_id` `comment_parent_id` VARCHAR(255) NOT NULL DEFAULT -1;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `deletedAt` `deletedAt` DATETIME;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_197' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_197`;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='Comments' AND constraint_name = 'comments_ibfk_198' AND TABLE_SCHEMA = 'blog';

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Comments`
      DROP FOREIGN KEY `comments_ibfk_198`;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Comments` ADD FOREIGN KEY (`article_id`) REFERENCES `Articles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Comments` CHANGE `comment_name` `comment_name` VARCHAR(255) NOT NULL DEFAULT 'User';

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SHOW INDEX FROM `Comments`

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): CREATE TABLE IF NOT EXISTS `Articles_Tags_mapping` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `ArticleId` INTEGER , `TagId` INTEGER , PRIMARY KEY (`ArticleId`, `TagId`), FOREIGN KEY (`ArticleId`) REFERENCES `Articles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`TagId`) REFERENCES `Tags` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SHOW FULL COLUMNS FROM `Articles_Tags_mapping`;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'Articles_Tags_mapping' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='blog' AND REFERENCED_TABLE_NAME IS NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): ALTER TABLE `Articles_Tags_mapping` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;

sql [2020-08-19 22:45:22] [DEBUG]: Executing (default): SHOW INDEX FROM `Articles_Tags_mapping`

sql [2020-08-19 22:45:24] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 22:45:24] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 10;

sql [2020-08-19 22:56:26] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:56:26] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 22:56:26] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:56:26] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 22:56:26] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 22:56:26] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 22:56:56] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:56:56] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 22:56:56] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 22:56:56] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 22:56:56] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 22:56:56] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:00:42] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 23:00:42] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:00:42] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 23:00:42] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 23:00:44] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:00:44] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:00:44] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:00:44] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:00:44] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:00:44] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:01:50] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 23:01:50] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:03:48] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 23:03:48] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:03:48] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 23:03:48] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 23:03:49] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:03:49] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:03:49] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:03:49] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:03:49] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:03:49] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:04:53] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:04:53] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:04:53] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:04:53] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:04:53] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:04:53] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:05:16] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:16] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:05:16] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:16] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:05:16] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:16] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:05:18] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:18] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:05:18] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:18] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:05:18] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:18] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:05:20] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:20] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:05:20] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:20] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:05:20] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:20] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:05:21] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:21] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:05:21] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:21] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:05:21] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:21] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:05:24] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:24] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:05:24] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:24] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:05:24] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:24] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:05:26] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:26] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:05:26] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:26] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:05:26] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:26] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:05:27] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:27] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:05:27] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:27] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:05:27] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:27] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:05:34] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:34] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:05:34] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:34] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:05:34] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:34] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:05:35] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:35] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:05:35] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:35] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:05:35] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:35] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:05:36] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:36] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:05:36] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:36] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:05:36] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:36] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:05:37] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:37] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:05:37] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:37] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:05:37] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:37] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:05:38] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:38] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:05:38] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:38] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:05:38] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:38] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:05:39] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:39] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:05:39] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:39] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:05:39] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:39] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:05:41] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:41] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:05:41] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:41] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:05:41] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:05:41] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:06:03] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:03] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:06:03] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:03] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:06:03] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:03] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:06:06] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:06] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:06:06] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:06] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:06:06] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:06] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:06:09] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:09] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:06:09] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:09] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:06:09] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:09] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:06:34] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:34] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:06:34] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:34] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:06:34] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:34] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:06:35] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:35] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:06:35] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:35] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:06:35] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:35] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:06:37] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:37] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:06:37] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:37] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:06:37] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:37] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:06:38] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:38] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:06:38] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:38] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:06:38] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:38] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:06:39] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:39] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:06:39] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:39] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:06:39] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:39] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:06:40] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:40] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:06:40] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:40] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:06:40] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:40] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:06:41] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:41] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:06:41] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:41] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:06:41] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:41] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:06:42] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:42] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:06:42] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:42] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:06:42] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:42] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:06:43] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:43] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:06:43] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:43] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:06:43] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:43] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:06:44] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:44] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:06:44] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:44] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:06:44] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:44] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:06:45] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:45] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:06:45] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:45] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:06:45] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:06:45] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:11:47] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:11:47] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:11:50] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:11:50] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:11:50] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:11:50] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:11:50] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:11:50] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:11:54] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:11:54] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:11:55] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:11:55] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:11:55] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:11:55] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:11:55] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:11:55] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:11:58] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:11:58] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:12:10] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:12:10] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:12:15] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%');

sql [2020-08-19 23:12:15] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%v%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:12:17] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 23:12:17] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:12:17] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 23:12:17] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 23:12:37] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:12:37] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:12:38] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:12:38] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:12:38] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:12:38] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:12:51] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:12:51] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:12:55] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:12:55] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:13:21] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:13:21] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:13:21] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:13:21] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:13:21] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:13:21] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:16:07] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:16:07] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:16:07] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:16:07] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:16:07] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:16:07] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:16:10] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:16:10] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:16:11] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:16:11] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:16:11] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:16:11] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:16:11] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:16:11] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:16:18] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:16:18] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:16:23] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:16:23] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:16:23] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:16:23] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:16:23] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:16:23] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:17:34] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:17:34] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:17:40] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 23:17:40] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:17:40] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 23:17:40] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 23:18:20] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:18:20] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:18:21] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 23:18:21] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:18:21] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 23:18:21] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 23:18:26] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:18:26] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:18:28] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:18:28] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:18:29] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 23:18:29] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:18:29] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 23:18:29] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 23:18:49] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 23:18:49] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:18:49] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 23:18:49] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 23:22:26] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 23:22:26] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:22:26] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 23:22:26] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 23:23:02] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:23:02] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:23:02] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:23:02] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:23:02] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:23:02] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:23:08] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:23:08] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:23:11] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 23:23:11] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:23:11] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 23:23:11] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 23:23:13] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 23:23:13] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:23:17] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:23:17] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:23:17] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:23:17] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:23:17] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:23:17] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:23:24] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 23:23:24] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:23:28] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 23:23:28] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:23:28] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 23:23:28] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 23:23:32] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 23:23:32] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:23:32] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 23:23:32] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 23:23:36] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 23:23:36] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:23:36] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 23:23:36] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 23:23:38] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 23:23:38] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:23:38] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 23:23:38] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 23:23:51] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:23:51] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:23:51] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:23:51] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:23:51] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:23:51] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:24:26] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:24:26] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:24:47] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 23:24:47] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:24:47] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 23:24:47] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 23:24:50] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 23:24:50] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:24:52] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:24:52] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:24:53] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:24:53] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:24:53] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:24:53] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:24:53] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:24:53] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:25:55] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:25:55] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:25:55] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:25:55] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:25:55] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:25:55] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:25:59] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 23:25:59] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:25:59] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 23:25:59] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 23:26:01] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 23:26:01] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:26:06] [DEBUG]: Executing (default): INSERT INTO `Comments` (`id`,`comment_likes`,`comment_name`,`comment_content`,`comment_parent_id`,`createdAt`,`updatedAt`,`article_id`) VALUES (DEFAULT,?,?,?,?,?,?,?);

sql [2020-08-19 23:26:06] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 23:26:06] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 23:26:16] [DEBUG]: Executing (default): INSERT INTO `Comments` (`id`,`comment_likes`,`comment_name`,`comment_content`,`comment_parent_id`,`createdAt`,`updatedAt`,`article_id`) VALUES (DEFAULT,?,?,?,?,?,?,?);

sql [2020-08-19 23:26:16] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 23:26:16] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 23:26:23] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:26:23] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:26:23] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:26:23] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:26:23] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:26:23] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:26:41] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:26:41] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:26:41] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:26:41] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:26:41] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:26:41] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 4;

sql [2020-08-19 23:26:58] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:26:58] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 10;

sql [2020-08-19 23:28:02] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 23:28:02] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:28:02] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 23:28:02] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 23:28:04] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 23:28:04] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:28:12] [DEBUG]: Executing (default): INSERT INTO `Comments` (`id`,`comment_likes`,`comment_name`,`comment_content`,`comment_parent_id`,`createdAt`,`updatedAt`,`article_id`) VALUES (DEFAULT,?,?,?,?,?,?,?);

sql [2020-08-19 23:28:12] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 23:28:12] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 23:28:15] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:28:15] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 10;

sql [2020-08-19 23:28:48] [DEBUG]: Executing (default): INSERT INTO `Comments` (`id`,`comment_likes`,`comment_name`,`comment_content`,`comment_parent_id`,`createdAt`,`updatedAt`,`article_id`) VALUES (DEFAULT,?,?,?,?,?,?,?);

sql [2020-08-19 23:28:48] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 23:28:48] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 23:28:52] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:28:52] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 10;

sql [2020-08-19 23:29:24] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:29:24] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 190, 10;

sql [2020-08-19 23:29:34] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:29:34] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 20;

sql [2020-08-19 23:29:44] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:29:44] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL LIMIT 0, 20;

sql [2020-08-19 23:29:51] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:29:51] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL ORDER BY `Comment`.`createdAt` DESC LIMIT 0, 20;

sql [2020-08-19 23:30:02] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:30:02] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL ORDER BY `Comment`.`createdAt` DESC LIMIT 0, 10;

sql [2020-08-19 23:30:24] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 23:30:24] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:30:24] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 23:30:24] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 23:30:26] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:30:26] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:30:26] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:30:26] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:30:26] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:30:26] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL ORDER BY `Comment`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:30:34] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 23:30:34] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:30:34] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 23:30:34] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 23:30:35] [DEBUG]: Executing (default): SELECT `article_likes` FROM `Articles` AS `Article` WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '2');

sql [2020-08-19 23:30:35] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_likes`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:30:39] [DEBUG]: Executing (default): INSERT INTO `Comments` (`id`,`comment_likes`,`comment_name`,`comment_content`,`comment_parent_id`,`createdAt`,`updatedAt`,`article_id`) VALUES (DEFAULT,?,?,?,?,?,?,?);

sql [2020-08-19 23:30:39] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2');

sql [2020-08-19 23:30:39] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '2') LIMIT 0, 10;

sql [2020-08-19 23:30:41] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:30:41] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:30:41] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:30:41] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:30:41] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:30:41] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL ORDER BY `Comment`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:33:19] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:33:19] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:33:19] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:33:19] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:33:19] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:33:19] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL ORDER BY `Comment`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:33:29] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:33:29] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:33:29] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:33:29] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:33:29] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:33:29] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL ORDER BY `Comment`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:34:42] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:34:42] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:34:42] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:34:42] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:34:42] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:34:42] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL ORDER BY `Comment`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:37:07] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:37:07] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:37:07] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:37:07] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:37:07] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:37:07] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL ORDER BY `Comment`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:39:42] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:39:42] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:39:42] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:39:42] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:39:42] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:39:42] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL ORDER BY `Comment`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:40:02] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:40:02] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:40:17] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:40:17] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:40:17] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:40:17] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:40:17] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:40:17] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL ORDER BY `Comment`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:41:22] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:41:22] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:41:22] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:41:22] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:41:22] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:41:22] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL ORDER BY `Comment`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:42:30] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:42:30] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:42:30] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:42:30] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:42:30] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:42:30] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL ORDER BY `Comment`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:42:34] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:42:34] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:42:34] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:42:34] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:42:34] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:42:34] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL ORDER BY `Comment`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:42:43] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:42:43] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:42:43] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:42:43] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:42:43] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:42:43] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL ORDER BY `Comment`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:42:47] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:42:47] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:42:53] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:42:53] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:42:54] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:42:54] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:42:54] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:42:54] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:42:54] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:42:54] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL ORDER BY `Comment`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:43:00] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 23:43:00] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:43:04] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 23:43:04] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:43:06] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%');

sql [2020-08-19 23:43:06] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`article_title` LIKE '%vue%') ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:43:08] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_html`, `Article`.`article_likes`, `Article`.`article_views`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE (`Article`.`deletedAt` IS NULL AND `Article`.`id` = '4');

sql [2020-08-19 23:43:08] [DEBUG]: Executing (default): UPDATE `Articles` SET `article_views`=?,`updatedAt`=? WHERE (`deletedAt` IS NULL AND `id` = ?)

sql [2020-08-19 23:43:08] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4');

sql [2020-08-19 23:43:08] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE (`Comment`.`deletedAt` IS NULL AND `Comment`.`article_id` = '4') LIMIT 0, 10;

sql [2020-08-19 23:43:41] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:43:41] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:43:41] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:43:41] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:43:41] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:43:41] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL ORDER BY `Comment`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:44:15] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:44:15] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 4;

sql [2020-08-19 23:44:15] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:44:15] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY `Article`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:44:15] [DEBUG]: Executing (default): SELECT count(`Comment`.`id`) AS `count` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL;

sql [2020-08-19 23:44:15] [DEBUG]: Executing (default): SELECT `Comment`.`id`, `Comment`.`comment_likes`, `Comment`.`comment_name`, `Comment`.`comment_content`, `Comment`.`comment_parent_id`, `Comment`.`createdAt`, `Comment`.`user_id`, `Comment`.`article_id`, `article`.`id` AS `article.id`, `article`.`article_title` AS `article.article_title` FROM `Comments` AS `Comment` LEFT OUTER JOIN `Articles` AS `article` ON `Comment`.`article_id` = `article`.`id` AND (`article`.`deletedAt` IS NULL) WHERE `Comment`.`deletedAt` IS NULL ORDER BY `Comment`.`createdAt` DESC LIMIT 0, 4;

sql [2020-08-19 23:44:34] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:44:34] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:45:14] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:45:14] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

sql [2020-08-19 23:45:46] [DEBUG]: Executing (default): SELECT count(`Article`.`id`) AS `count` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL;

sql [2020-08-19 23:45:46] [DEBUG]: Executing (default): SELECT `Article`.`id`, `Article`.`article_desc`, `Article`.`article_title`, `Article`.`article_type`, `Article`.`article_views`, `Article`.`createdAt`, `user`.`id` AS `user.id`, `user`.`user_name` AS `user.user_name` FROM `Articles` AS `Article` LEFT OUTER JOIN `Users` AS `user` ON `Article`.`user_id` = `user`.`id` AND (`user`.`deletedAt` IS NULL) WHERE `Article`.`deletedAt` IS NULL ORDER BY CAST(`article_views` AS SIGNED) DESC LIMIT 0, 10;

